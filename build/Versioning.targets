<?xml version="1.0" encoding="utf-8"?>
<!-- Deal With Versions (Assembly/Package). -->
<Project>

  <!-- TODO: Try to get Git commit hash, branch name and tag name. -->
  <!-- TODO: Error out if version is not prerelease and not on a tag (optionally strictly verifying the tag name). -->

  <Target Name="ParseVersionSpecification">
    <!-- First Step: Split using a regex. -->
    <PropertyGroup>
      <_VersionRegex>^\s*((\d+[.]\d+)(?:[.]\d+)?)(-[a-z0-9]+(?:[.][a-z0-9]+)*)?\s*$</_VersionRegex>
      <_Version_Full>$([System.Text.RegularExpressions.Regex]::Match('$(Version)', '$(_VersionRegex)').Groups[1].Value)</_Version_Full>
      <_Version_API>$([System.Text.RegularExpressions.Regex]::Match('$(Version)', '$(_VersionRegex)').Groups[2].Value)</_Version_API>
      <_Version_Pre>$([System.Text.RegularExpressions.Regex]::Match('$(Version)', '$(_VersionRegex)').Groups[3].Value)</_Version_Pre>
    </PropertyGroup>
    <!-- Second Step: Ensure this matched a version part. -->
    <Error Text="Version ('$(Version)') not specified or invalid: must be of the form MAJOR.MINOR[.PATCH][-prerelease]"
           Condition=" '$(_Version_API)' == '' "/>
    <!-- Third Step: Use the Version class to canonicalize the values. -->
    <PropertyGroup>
      <_Version_API>$([System.Version]::Parse('$(_Version_API)').ToString(2))</_Version_API>
      <_Version_Full>$([System.Version]::Parse('$(_Version_Full).0').ToString(3))</_Version_Full>
    </PropertyGroup>
    <!-- Final Step: Update Version (Canonical Form) -->
    <PropertyGroup>
      <Version>$(_Version_Full)$(_Version_Pre)</Version>
    </PropertyGroup>
  </Target>

  <Target Name="SetAssemblyInfoPropertiesFromVersion" BeforeTargets="CoreCompile" DependsOnTargets="ParseVersionSpecification">
    <!-- TODO: Include Git info in informational version: 1.2-pre (Branch '<branchname', commit <commithash>). -->
    <PropertyGroup>
      <AssemblyVersion>$(_Version_API)</AssemblyVersion>
      <FileVersion>$(_Version_Full)</FileVersion>
      <InformationalVersion>$(Version)</InformationalVersion>
    </PropertyGroup>
    <!-- Debug Output -->
    <Message Importance="$(DebugMessageImportance)" Text="Assembly Info Properties Computed Using Version ('$(Version)'):"/>
    <Message Importance="$(DebugMessageImportance)" Text="- AssemblyVersion      : $(AssemblyVersion)"/>
    <Message Importance="$(DebugMessageImportance)" Text="- FileVersion          : $(FileVersion)"/>
    <Message Importance="$(DebugMessageImportance)" Text="- InformationalVersion : $(InformationalVersion)"/>
  </Target>

  <Target Name="SetPackagePropertiesFromVersion" BeforeTargets="GenerateNuSpec" DependsOnTargets="ParseVersionSpecification">
    <PropertyGroup>
      <PackageVersion>$(Version)</PackageVersion>
      <!-- NuGet warns about SemVer 2.0 features (like build identifiers). Shut that warning up. -->
      <NoWarn>$(NoWarn);NU5105</NoWarn>
    </PropertyGroup>
    <!-- Add AppVeyor build info, if applicable. -->
    <PropertyGroup Condition=" '$(APPVEYOR)' != '' And '$(CI)' != '' ">
      <PackageBuildIdentifier Condition=" '$(PackageBuildIdentifier)' != '' ">$(PackageBuildIdentifier).</PackageBuildIdentifier>
      <PackageBuildIdentifier>$(PackageBuildIdentifier)appveyor.build-$(APPVEYOR_BUILD_NUMBER)</PackageBuildIdentifier>
      <PackageBuildIdentifier Condition=" '$(APPVEYOR_PULL_REQUEST_NUMBER)' != '' ">$(PackageBuildIdentifier).pr-$($(APPVEYOR_PULL_REQUEST_NUMBER))</PackageBuildIdentifier>
    </PropertyGroup>
    <!-- TODO: Include Git info in build identifier (foo-1.2+master.<hash>, foo-1.2+branch.<branchname>.<hash>, foo-1.2+tag.<tagname>) . -->
    <!-- Add a timestamp as build identifier, unless told not to. -->
    <PropertyGroup Condition=" '$(NoTimestampInBuildIdentifier)' != 'true' ">
      <PackageBuildIdentifier Condition=" '$(PackageBuildIdentifier)' != '' ">$(PackageBuildIdentifier).</PackageBuildIdentifier>
      <PackageBuildIdentifier>$(PackageBuildIdentifier)$([System.DateTime]::Now.ToString('yyyyMMdd.HHmmss.fff'))</PackageBuildIdentifier>
    </PropertyGroup>
    <!-- If a Build Identifier was set up above, add it. -->
    <PropertyGroup Condition=" '$(PackageBuildIdentifier)' != '' ">
      <PackageVersion>$(PackageVersion)+$(PackageBuildIdentifier)</PackageVersion>
    </PropertyGroup>
    <!-- Debug Output -->
    <Message Importance="$(DebugMessageImportance)" Text="Package Properties Computed Using Version ('$(Version)'):"/>
    <Message Importance="$(DebugMessageImportance)" Text="- PackageVersion : $(PackageVersion)"/>
  </Target>

</Project>
